{"version":3,"sources":["redux/actions/userActions.js","components/Header/Header.js","components/Footer/Footer.js","Screens/LandingPage/LandingPage.js","components/MainScreen.js","redux/actions/notesAction.js","Screens/MyNotes/MyNotes.js","Screens/Login/LoginScreen.js","Screens/Register/RegisterScreen.js","Screens/CreateNote/CreateNote.js","Screens/SingleNote/SingleNote.js","App.js","reportWebVitals.js","redux/store.js","redux/reducers/userReducers.js","redux/reducers/notesReducer.js","index.js"],"names":["login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","console","log","response","message","Header","setSearch","useDispatch","userInfo","useSelector","state","userLogin","history","useHistory","Navbar","bg","expand","variant","Container","Brand","Toggle","Collapse","id","Nav","className","Form","inline","FormControl","placeholder","onChange","e","target","value","NavDropdown","title","name","Item","onClick","removeItem","push","src","pic","style","width","height","borderRadius","alt","Footer","position","bottom","display","justifyContent","Row","Col","LandingPage","backgroundRepeat","href","Button","size","MainScreen","children","listNotes","getState","Authorization","token","get","MyNotes","search","deleteHandler","window","confirm","delete","error","noteDeleteAction","noteList","noteDelete","deleteSuccess","loading","success","notes","noteUpdate","createSuccess","noteCreate","useEffect","Helmet","content","Alert","to","marginBottom","location","reload","minWidth","maxHeight","placeItems","marginTop","Spinner","animation","role","filter","filtered","toLowerCase","includes","map","note","Accordion","Card","fontSize","flex","align","cursor","as","Text","eventKey","_id","Body","Badge","category","createdAt","substring","LoginScreen","useState","setEmail","setPassword","submitHandler","preventDefault","onSubmit","Group","controlId","Label","Control","disabled","RegisterScreen","setName","setPic","confirmPassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","register","File","pics","FormData","append","fetch","method","body","then","json","url","toString","catch","err","postDetails","files","label","custom","paddingBottom","CreateNote","setTitle","setContent","setCategory","createNote","rows","SingleNote","match","params","put","updateNoteAction","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","getItem","parse","reducers","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.135ad229.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n   try {\r\n      dispatch({ type: \"USER_LOGIN_REQUEST\" });\r\n      const config = {\r\n         headers: {\r\n            \"Content-type\": \"application/json\",\r\n         },\r\n      };\r\n      const { data } = await axios.post(\r\n         \"/api/users/login\",\r\n         { email, password },\r\n         config\r\n      );\r\n\r\n      dispatch({ type: \"USER_LOGIN_SUCCESS\", payload: data });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n   } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n         type: \"USER_LOGIN_FAIL\",\r\n         payload: error?.response?.data?.message,\r\n      });\r\n   }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n   localStorage.removeItem(\"userInfo\");\r\n   dispatch({ type: \"USER_LOGOUT\" });\r\n};\r\n\r\nexport const register = (name, email, password, pic) => async (dispatch) => {\r\n   try {\r\n      dispatch({ type: \"USER_REGISTER_REQUEST\" });\r\n      const config = {\r\n         headers: {\r\n            \"Content-Type\": \"application/json\",\r\n         },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n         \"/api/users\",\r\n         { name, email, password, pic },\r\n         config\r\n      );\r\n\r\n      dispatch({ type: \"USER_REGISTER_SUCCESS\", payload: data });\r\n      dispatch({ type: \"USER_LOGIN_SUCCESS\", payload: data });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n   } catch (error) {\r\n      dispatch({\r\n         type: \"USER_REGISTER_FAIL\",\r\n         payload: error.response.data.message,\r\n      });\r\n   }\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { logout } from \"../../redux/actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Header = ({ setSearch }) => {\r\n  const dispatch = useDispatch();\r\n  // const data = JSON.stringify(localStorage.getItem(\"userInfo\"));\r\n  // console.log(data.name);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo } = userLogin;\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <Link>Note Saver</Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"m-auto\">\r\n            <Form inline>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                className=\"mr-sm-2\"\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n            </Form>\r\n          </Nav>\r\n          {userInfo ? (\r\n            <Nav>\r\n              <NavDropdown title={userInfo?.name} id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item\r\n                  onClick={() => {\r\n                    dispatch(logout());\r\n                    history.push(\"/\");\r\n                  }}\r\n                >\r\n                  Logout\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n              <img\r\n                src={userInfo?.pic}\r\n                style={{ width: \"40px\", height: \"40px\", borderRadius: \"50%\" }}\r\n                alt={userInfo?.name}\r\n              />\r\n            </Nav>\r\n          ) : null}\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n   return (\r\n      <footer\r\n         style={{\r\n            width: \"100%\",\r\n            position: \"relative\",\r\n            bottom: \"0\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n         }}\r\n      >\r\n         <Container>\r\n            <Row>\r\n               <Col className=\"text-center py-3\">\r\n                  Copyright &copy; Note Saver 2021\r\n               </Col>\r\n            </Row>\r\n         </Container>\r\n      </footer>\r\n   );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./LandingPage.css\";\r\nimport { Container, Row, Button } from \"react-bootstrap\";\r\n\r\nconst LandingPage = ({ history }) => {\r\n   // useEffect(() => {\r\n   //    const userInfo = localStorage.getItem(\"userInfo\");\r\n   //    if (userInfo) {\r\n   //       history.push(\"/mynotes\");\r\n   //    }\r\n   // }, [history]);\r\n\r\n   return (\r\n      <div\r\n         style={{\r\n            // backgroundImage: `url(\"./img/pexels-karolina-grabowska-4195499.jpg\")`,\r\n            backgroundRepeat: \"no-repeat\",\r\n         }}\r\n         className=\"main\"\r\n      >\r\n         <Container>\r\n            <Row>\r\n               <div className=\"intro-text\">\r\n                  <div className=\"text-container\">\r\n                     <h1 className=\"landing-page-heading\">\r\n                        Welcome to Note saver\r\n                     </h1>\r\n                     <p>A trusted place for all your notes.</p>\r\n                  </div>\r\n                  <div className=\"button-container\">\r\n                     <a href=\"/login\">\r\n                        <Button size=\"lg\" className=\"landingButton\">\r\n                           Login\r\n                        </Button>\r\n                     </a>\r\n                     <a href=\"/register\">\r\n                        <Button\r\n                           size=\"lg\"\r\n                           className=\"landingButton\"\r\n                           variant=\"outline-primary\"\r\n                        >\r\n                           Register\r\n                        </Button>\r\n                     </a>\r\n                  </div>\r\n               </div>\r\n            </Row>\r\n         </Container>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport \"./MainScreen.css\";\r\n\r\nconst MainScreen = ({ title, children }) => {\r\n   return (\r\n      <div className=\"mainback\">\r\n         <Container>\r\n            <Row>\r\n               <div className=\"page\">\r\n                  {title && <h1 className=\"component-title\">{title}</h1>}\r\n               </div>\r\n               <hr />\r\n               {children}\r\n            </Row>\r\n         </Container>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default MainScreen;\r\n","import axios from \"axios\";\r\n\r\nexport const listNotes = () => async (dispatch, getState) => {\r\n   try {\r\n      dispatch({ type: \"NOTES_LIST_REQUEST\" });\r\n      const userInfo = getState()?.userLogin?.userInfo;\r\n      const config = {\r\n         headers: { Authorization: \"Bearer \" + userInfo?.token },\r\n      };\r\n      const { data } = await axios.get(\"/api/notes\", config);\r\n      dispatch({ type: \"NOTES_LIST_SUCCESS\", payload: data });\r\n\r\n      localStorage.setItem(\"notes\", JSON.stringify(data));\r\n   } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n         type: \"NOTES_LIST_FAIL\",\r\n         payload: error?.response?.data?.message,\r\n      });\r\n   }\r\n};\r\n\r\nexport const createNote =\r\n   (title, content, category) => async (dispatch, getState) => {\r\n      try {\r\n         dispatch({ type: \"NOTES_CREATE_REQUEST\" });\r\n         const userInfo = getState().userLogin.userInfo;\r\n         const config = {\r\n            headers: {\r\n               \"Content-type\": \"application/json\",\r\n               Authorization: \"Bearer \" + userInfo.token,\r\n            },\r\n         };\r\n\r\n         const { data } = await axios.post(\r\n            \"/api/notes/create\",\r\n            { title, content, category },\r\n            config\r\n         );\r\n\r\n         dispatch({ type: \"NOTES_CREATE_SUCCESS\", payload: data });\r\n      } catch (error) {\r\n         console.log(error);\r\n         dispatch({\r\n            type: \"NOTES_CREATE_FAIL\",\r\n            payload: error?.response?.data?.message,\r\n         });\r\n      }\r\n   };\r\n\r\nexport const updateNoteAction =\r\n   (id, title, content, category) => async (dispatch, getState) => {\r\n      try {\r\n         dispatch({ type: \"NOTES_UPDATE_REQUEST\" });\r\n         const userInfo = getState().userLogin.userInfo;\r\n         const config = {\r\n            headers: {\r\n               \"Content-type\": \"application/json\",\r\n               Authorization: \"Bearer \" + userInfo.token,\r\n            },\r\n         };\r\n\r\n         const { data } = await axios.put(\r\n            `/api/notes/update/${id}`,\r\n            { title, content, category },\r\n            config\r\n         );\r\n         dispatch({ type: \"NOTES_UPDATE_SUCCESS\", payload: data });\r\n      } catch (error) {\r\n         console.log(error);\r\n         dispatch({\r\n            type: \"NOTES_UPDATE_FAIL\",\r\n            payload: error?.response?.data?.message,\r\n         });\r\n      }\r\n   };\r\n\r\nexport const noteDeleteAction = (id) => async (dispatch, getState) => {\r\n   try {\r\n      dispatch({ type: \"NOTES_DELETE_REQUEST\" });\r\n      const userInfo = getState().userLogin.userInfo;\r\n\r\n      const config = {\r\n         headers: { Authorization: \"Bearer \" + userInfo.token },\r\n      };\r\n\r\n      const { data } = axios.delete(`/api/notes/delete/${id}`, config);\r\n      dispatch({ type: \"NOTES_DELETE_SUCCESS\", payload: data });\r\n   } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n         type: \"NOTES_DELETE_FAIL\",\r\n         payload: error?.response?.data?.message,\r\n      });\r\n   }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Badge,\r\n  Accordion,\r\n  Spinner,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { listNotes, noteDeleteAction } from \"../../redux/actions/notesAction\";\r\n\r\nconst MyNotes = ({ search }) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(noteDeleteAction(id));\r\n    }\r\n  };\r\n\r\n  const noteList = useSelector((state) => state.noteList);\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n\r\n  const {\r\n    loading: deleteLoading,\r\n    error: deleteError,\r\n    success: deleteSuccess,\r\n  } = noteDelete;\r\n\r\n  const { error, loading, notes } = noteList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo } = userLogin;\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { success } = noteUpdate;\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n  const { success: createSuccess } = noteCreate;\r\n\r\n  //   useEffect(() => {\r\n  //     window.location.reload();\r\n  //   }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(listNotes());\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [dispatch, history, userInfo, success, deleteSuccess, createSuccess]);\r\n\r\n  const refreshHandler = () => {\r\n    window.location.reload();\r\n    //  dispatch(listNotes());\r\n    console.log(createSuccess);\r\n    console.log(\"createSuccess\");\r\n  };\r\n  return (\r\n    <MainScreen title=\"My Notes\">\r\n      <Helmet>\r\n        {\" \"}\r\n        <title>My Notes</title>\r\n        <meta name=\"description\" content=\"A safe place for all your notes\" />\r\n      </Helmet>\r\n      {error && (\r\n        <Alert variant=\"danger\">\r\n          <strong>{error}</strong>\r\n        </Alert>\r\n      )}\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <Link to=\"/createnote\">\r\n          <Button size=\"lg\" style={{ marginBottom: \"6px\" }}>\r\n            Create New Note\r\n          </Button>\r\n        </Link>\r\n\r\n        <Button\r\n          size=\"lg\"\r\n          style={{ marginBottom: \"6px\" }}\r\n          onClick={refreshHandler}\r\n          variant=\"success\"\r\n        >\r\n          <i className=\"fas fa-sync-alt\"></i>\r\n        </Button>\r\n      </div>\r\n      {loading && (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            minWidth: \"50px\",\r\n            display: \"grid\",\r\n            maxHeight: \"56px\",\r\n            placeItems: \"center\",\r\n            marginTop: \"4rem\",\r\n          }}\r\n        >\r\n          <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n        </div>\r\n      )}\r\n      {notes\r\n        ?.filter((filtered) =>\r\n          filtered.title.toLowerCase().includes(search.toLowerCase())\r\n        )\r\n        .map((note) => (\r\n          <Accordion key={note._id}>\r\n            <Card style={{ marginTop: \"20px\" }}>\r\n              <Card.Header style={{ display: \"flex\" }}>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"1.5rem\",\r\n                    flex: 1,\r\n                    align: \"center\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  <Accordion.Toggle as={Card.Text} variant=\"link\" eventKey=\"0\">\r\n                    {note.title}\r\n                  </Accordion.Toggle>\r\n                </span>\r\n                <div>\r\n                  <Button href={`/note/${note._id}`} variant=\"info\">\r\n                    Edit\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => deleteHandler(note._id)}\r\n                    className=\"mx-3\"\r\n                    variant=\"danger\"\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </div>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                  <h4>\r\n                    <Badge variant=\"primary\">Category - {note.category}</Badge>\r\n                  </h4>\r\n                  <blockquote className=\"blockquote mb-0\">\r\n                    <p>{note.content}</p>\r\n                    <footer className=\"blockquote-footer\">\r\n                      Created on\r\n                      <cite title=\"Source Title\">\r\n                        {\" \"}\r\n                        {note.createdAt.substring(0, 10)}\r\n                      </cite>\r\n                    </footer>\r\n                  </blockquote>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n        ))}\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default MyNotes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { Form, Button, Row, Col, Spinner, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { login } from \"../../redux/actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import ErrorMessage from \"../../components/ErrorMessage\";\r\n\r\nconst LoginScreen = ({ history }) => {\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n\r\n   const dispatch = useDispatch();\r\n   const userLogin = useSelector((state) => state.userLogin);\r\n   const { loading, error, userInfo } = userLogin;\r\n\r\n   useEffect(() => {\r\n      if (userInfo) {\r\n         history.push(\"/mynotes\");\r\n      }\r\n   }, [history, userInfo]);\r\n\r\n   const submitHandler = async (e) => {\r\n      e.preventDefault();\r\n      dispatch(login(email, password));\r\n   };\r\n\r\n   return (\r\n      <MainScreen title=\"Login\">\r\n         {/* <div>test</div> */}\r\n         {/* {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>} */}\r\n\r\n         {error && (\r\n            <Alert variant=\"danger\">\r\n               <strong>{error}</strong>\r\n            </Alert>\r\n         )}\r\n         <Form onSubmit={submitHandler}>\r\n            <Form.Group className=\"my-4\" controlId=\"formBasicEmail\">\r\n               <Form.Label>Email address</Form.Label>\r\n               <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n               />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"my-4\" controlId=\"formBasicPassword\">\r\n               <Form.Label>Password</Form.Label>\r\n               <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n               />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n               {loading ? (\r\n                  <div style={{ minWidth: \"50px\", maxHeight: \"26px\" }}>\r\n                     <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                  </div>\r\n               ) : (\r\n                  \"Submit\"\r\n               )}\r\n            </Button>\r\n         </Form>\r\n         <Row className=\"my-4\">\r\n            <Col>\r\n               Don't have an account? &nbsp;\r\n               <Link to=\"/register\">Sign up here</Link>\r\n            </Col>\r\n         </Row>\r\n      </MainScreen>\r\n   );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { Form, Button, Row, Col, Spinner, Alert } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register } from \"../../redux/actions/userActions\";\r\n\r\nconst RegisterScreen = () => {\r\n   const [email, setEmail] = useState(\"\");\r\n   const [name, setName] = useState(\"\");\r\n   const [pic, setPic] = useState(\r\n      \"http://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n   );\r\n   const [password, setPassword] = useState(\"\");\r\n   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n   const [message, setMessage] = useState(null);\r\n   const [picMessage, setPicMessage] = useState(null);\r\n\r\n   const dispatch = useDispatch();\r\n   const history = useHistory();\r\n\r\n   const userRegister = useSelector((state) => state.userRegister);\r\n\r\n   const { loading, error, userInfo } = userRegister;\r\n   useEffect(() => {\r\n      if (userInfo) {\r\n         history.push(\"/mynotes\");\r\n      }\r\n   }, [history, userInfo]);\r\n\r\n   const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      if (password !== confirmPassword) {\r\n         setMessage(\"Passwords do not match\");\r\n      } else {\r\n         dispatch(register(name, email, password, pic));\r\n      }\r\n   };\r\n   const postDetails = (pics) => {\r\n      console.log(pics);\r\n      if (!pics) {\r\n         return setPicMessage(\"Please select an image\");\r\n      }\r\n      setPicMessage(null);\r\n      if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n         const data = new FormData();\r\n         data.append(\"file\", pics);\r\n         data.append(\"upload_preset\", \"notesaverapp\");\r\n         data.append(\"cloud_name\", \"samgreen\");\r\n         fetch(\"https://api.cloudinary.com/v1_1/samgreen/image/upload\", {\r\n            method: \"post\",\r\n            body: data,\r\n         })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n               console.log(data);\r\n               setPic(data?.url?.toString());\r\n            })\r\n            .catch((err) => console.log(err));\r\n      } else {\r\n         setPicMessage(\"File format not supported\");\r\n      }\r\n   };\r\n\r\n   return (\r\n      <MainScreen title=\"Register\">\r\n         {message && (\r\n            <Alert variant=\"danger\">\r\n               <strong>{message}</strong>\r\n            </Alert>\r\n         )}\r\n         {error && (\r\n            <Alert variant=\"danger\">\r\n               <strong>{error}</strong>\r\n            </Alert>\r\n         )}\r\n         {picMessage && (\r\n            <Alert variant=\"danger\">\r\n               <strong>{picMessage}</strong>\r\n            </Alert>\r\n         )}\r\n         <Form onSubmit={submitHandler}>\r\n            <Form.Group className=\"my-4\" controlId=\"name\">\r\n               <Form.Label>Full Name</Form.Label>\r\n               <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Full Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n               />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"my-4\" controlId=\"formBasicEmail\">\r\n               <Form.Label>Email address</Form.Label>\r\n               <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n               />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"my-4\" controlId=\"password\">\r\n               <Form.Label>Password</Form.Label>\r\n               <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n               />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"my-4\" controlId=\"confirmPassword\">\r\n               <Form.Label>Confirm Password</Form.Label>\r\n               <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n               />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"my-4\">\r\n               <Form.Label>Profile Picture</Form.Label>\r\n               <Form.File\r\n                  onChange={(e) => postDetails(e.target.files[0])}\r\n                  id=\"custom-file\"\r\n                  type=\"image/png\"\r\n                  label=\"\"\r\n                  custom\r\n               />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n               {loading ? (\r\n                  <div\r\n                     style={{\r\n                        minWidth: \"50px\",\r\n                        height: \"25px\",\r\n                        maxHeight: \"31px\",\r\n                        paddingBottom: \"6px\",\r\n                     }}\r\n                  >\r\n                     <Spinner animation=\"grow\" role=\"status\"></Spinner>\r\n                  </div>\r\n               ) : (\r\n                  \"Submit\"\r\n               )}\r\n            </Button>\r\n         </Form>\r\n         <Row className=\"my-4\">\r\n            <Col>\r\n               Already have an account? &nbsp;\r\n               <Link to=\"/login\">Login here</Link>\r\n            </Col>\r\n         </Row>\r\n      </MainScreen>\r\n   );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Card, Form, Spinner } from \"react-bootstrap\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { createNote, listNotes } from \"../../redux/actions/notesAction\";\r\n\r\nconst CreateNote = ({ history }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n  const { loading, error, note, success: createSuccesss } = noteCreate;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !content || !category) {\r\n      return;\r\n    }\r\n    dispatch(createNote(title, content, category));\r\n\r\n    history.push(\"/mynotes\");\r\n    dispatch(listNotes());\r\n  };\r\n  return (\r\n    <MainScreen title=\"Create a Note\">\r\n      <Card>\r\n        <Card.Header>Create a new note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Enter title\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n                rows={4}\r\n                placeholder=\"Enter note content\"\r\n              />\r\n            </Form.Group>\r\n\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              {loading ? (\r\n                <div\r\n                  style={{\r\n                    minWidth: \"50px\",\r\n                    height: \"25px\",\r\n                    maxHeight: \"31px\",\r\n                    paddingBottom: \"6px\",\r\n                  }}\r\n                >\r\n                  <Spinner animation=\"grow\" role=\"status\"></Spinner>\r\n                </div>\r\n              ) : (\r\n                \"Submit\"\r\n              )}\r\n            </Button>\r\n            <Link to=\"/mynotes\">\r\n              <Button variant=\"danger\" type=\"submit\" className=\"mx-3\">\r\n                Cancel\r\n              </Button>\r\n            </Link>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>{\" \"}\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default CreateNote;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Card, Form, Spinner } from \"react-bootstrap\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { updateNoteAction } from \"../../redux/actions/notesAction\";\r\n\r\nconst SingleNote = ({ match, history }) => {\r\n   const [title, setTitle] = useState(\"\");\r\n   const [content, setContent] = useState(\"\");\r\n   const [category, setCategory] = useState(\"\");\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const noteUpdate = useSelector((state) => state.noteUpdate);\r\n   const { loading, error } = noteUpdate;\r\n\r\n   useEffect(() => {\r\n      axios\r\n         .get(`/api/notes/singlenote/${match.params.id}`)\r\n         .then((response) => {\r\n            setTitle(response.data.title);\r\n            setContent(response.data.content);\r\n            setCategory(response.data.category);\r\n         })\r\n         .catch((err) => {\r\n            console.log(err);\r\n         });\r\n   }, [match]);\r\n\r\n   const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      dispatch(updateNoteAction(match.params.id, title, content, category));\r\n      history.push(\"/mynotes\");\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         <MainScreen title=\"Edit Note\">\r\n            <Card>\r\n               <Card.Header>Create a new note</Card.Header>\r\n               <Card.Body>\r\n                  <Form onSubmit={submitHandler}>\r\n                     <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control\r\n                           value={title}\r\n                           onChange={(e) => setTitle(e.target.value)}\r\n                           type=\"text\"\r\n                           placeholder=\"Enter title\"\r\n                        />\r\n                     </Form.Group>\r\n                     <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Content</Form.Label>\r\n                        <Form.Control\r\n                           as=\"textarea\"\r\n                           value={content}\r\n                           onChange={(e) => setContent(e.target.value)}\r\n                           rows={4}\r\n                           placeholder=\"Enter note content\"\r\n                        />\r\n                     </Form.Group>\r\n\r\n                     {content && (\r\n                        <Card>\r\n                           <Card.Header>Note Preview</Card.Header>\r\n                           <Card.Body>\r\n                              <ReactMarkdown>{content}</ReactMarkdown>\r\n                           </Card.Body>\r\n                        </Card>\r\n                     )}\r\n\r\n                     <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control\r\n                           value={category}\r\n                           onChange={(e) => setCategory(e.target.value)}\r\n                           type=\"text\"\r\n                           placeholder=\"Enter category\"\r\n                        />\r\n                     </Form.Group>\r\n\r\n                     <Button variant=\"primary\" type=\"submit\">\r\n                        {loading ? (\r\n                           <div\r\n                              style={{\r\n                                 minWidth: \"50px\",\r\n                                 height: \"25px\",\r\n                                 maxHeight: \"31px\",\r\n                                 paddingBottom: \"6px\",\r\n                              }}\r\n                           >\r\n                              <Spinner animation=\"grow\" role=\"status\"></Spinner>\r\n                           </div>\r\n                        ) : (\r\n                           \"Submit\"\r\n                        )}\r\n                     </Button>\r\n                  </Form>\r\n               </Card.Body>\r\n            </Card>\r\n         </MainScreen>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SingleNote;\r\n","import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Hearder from \"./components/Header/Header\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport LandingPage from \"./Screens/LandingPage/LandingPage\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport MyNotes from \"./Screens/MyNotes/MyNotes\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport LoginScreen from \"./Screens/Login/LoginScreen\";\r\nimport RegisterScreen from \"./Screens/Register/RegisterScreen\";\r\nimport CreateNote from \"./Screens/CreateNote/CreateNote\";\r\nimport SingleNote from \"./Screens/SingleNote/SingleNote\";\r\n\r\nfunction App() {\r\n   const [search, setSearch] = useState(\"\");\r\n   console.log(search);\r\n   return (\r\n      <Router>\r\n         <Helmet>\r\n            <title>Home</title>\r\n            <meta\r\n               name=\"description\"\r\n               content=\"A safe place for all your notes\"\r\n            />\r\n         </Helmet>\r\n         <Hearder setSearch={setSearch} />\r\n         <main>\r\n            <Route path=\"/\" exact component={LandingPage} />\r\n            <Route path=\"/login\" exact component={LoginScreen} />\r\n            <Route path=\"/register\" exact component={RegisterScreen} />\r\n            <Route\r\n               path=\"/mynotes\"\r\n               exact\r\n               component={() => <MyNotes search={search} />}\r\n            />\r\n            <Route path=\"/note/:id\" exact component={SingleNote} />\r\n            <Route path=\"/createnote\" exact component={CreateNote} />\r\n         </main>\r\n         <Footer />\r\n      </Router>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { userLoginReducer, userRegisterReducer } from \"./reducers/userReducers\";\r\nimport {\r\n   noteCreateReducer,\r\n   noteDeleteReducer,\r\n   noteListReducer,\r\n   noteUpdateReducer,\r\n} from \"./reducers/notesReducer\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n   ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n   : null;\r\n\r\nconst initialState = { userLogin: { userInfo: userInfoFromStorage } };\r\n\r\nconst reducers = combineReducers({\r\n   userLogin: userLoginReducer,\r\n   userRegister: userRegisterReducer,\r\n   noteList: noteListReducer,\r\n   noteCreate: noteCreateReducer,\r\n   noteUpdate: noteUpdateReducer,\r\n   noteDelete: noteDeleteReducer,\r\n});\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n   reducers,\r\n   initialState,\r\n   composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","export const userLoginReducer = (state = {}, action) => {\r\n   if (action.type === \"USER_LOGIN_REQUEST\") {\r\n      return { loading: true };\r\n   } else if (action.type === \"USER_LOGIN_SUCCESS\") {\r\n      return { loading: false, userInfo: action.payload };\r\n   } else if (action.type === \"USER_LOGIN_FAIL\") {\r\n      return { loading: false, error: action.payload };\r\n   } else if (action.type === \"USER_LOGOUT\") {\r\n      return {};\r\n   } else {\r\n      return state;\r\n   }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n   if (action.type === \"USER_REGISTER_REQUEST\") {\r\n      return { loading: true };\r\n   } else if (action.type === \"USER_REGISTER_SUCCESS\") {\r\n      return { loading: false, userInfo: action.payload };\r\n   } else if (action.type === \"USER_REGISTER_FAIL\") {\r\n      return { loading: false, error: action.payload };\r\n   } else {\r\n      return state;\r\n   }\r\n};\r\n","export const noteListReducer = (state = { notes: [] }, action) => {\r\n   if (action.type === \"NOTES_LIST_REQUEST\") {\r\n      return { loading: true };\r\n   } else if (action.type === \"NOTES_LIST_SUCCESS\") {\r\n      return { loading: false, notes: action.payload };\r\n   } else if (action.type === \"NOTES_LIST_FAIL\") {\r\n      return { loading: false, error: action.payload };\r\n   } else {\r\n      return state;\r\n   }\r\n};\r\n\r\nexport const noteCreateReducer = (state = {}, action) => {\r\n   if (action.type === \"NOTES_CREATE_REQUEST\") {\r\n      return { loading: true };\r\n   } else if (action.type === \"NOTES_CREATE_SUCCESS\") {\r\n      return { loading: false, success: true };\r\n   } else if (action.type === \"NOTES_CREATE_FAIL\") {\r\n      return { loading: false, error: action.payload };\r\n   } else {\r\n      return state;\r\n   }\r\n};\r\n\r\nexport const noteUpdateReducer = (state = {}, action) => {\r\n   if (action.type === \"NOTES_UPDATE_REQUEST\") {\r\n      return { loading: true };\r\n   } else if (action.type === \"NOTES_UPDATE_SUCCESS\") {\r\n      return { loading: false, success: true };\r\n   } else if (action.type === \"NOTES_UPDATE_FAIL\") {\r\n      return { loading: false, error: action.payload, success: false };\r\n   } else {\r\n      return state;\r\n   }\r\n};\r\n\r\nexport const noteDeleteReducer = (state = {}, action) => {\r\n   if (action.type === \"NOTES_DELETE_REQUEST\") {\r\n      return { loading: true };\r\n   } else if (action.type === \"NOTES_DELETE_SUCCESS\") {\r\n      return { loading: false, success: true };\r\n   } else if (action.type === \"NOTES_DELETE_FAIL\") {\r\n      return { loading: false, error: action.payload, success: false };\r\n   } else {\r\n      return state;\r\n   }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n   <Provider store={store}>\r\n      <App />\r\n   </Provider>,\r\n   document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}